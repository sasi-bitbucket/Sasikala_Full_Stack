package com.project.SampleApplication.service;

import java.util.Optional;
import java.util.Set;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;

import com.project.SampleApplication.model.User;
import com.project.SampleApplication.repository.UserRepository;

@Service
public class CustomUserDetailsService implements UserDetailsService{
	
	private UserRepository repository;
	
	@Autowired
	public CustomUserDetailsService(UserRepository repository) {
		this.repository = repository;
	}

	@Override
	public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
		Optional<User> user = repository.findByUsername(username);

		if (user.isPresent()) {
			Set<GrantedAuthority> authorities = user.get().getRoles().stream()
					.map((role) -> new SimpleGrantedAuthority(role.getName())).collect(Collectors.toSet());
			return new org.springframework.security.core.userdetails.User(username, user.get().getPassword(),
					authorities);
		} else {
			throw new UsernameNotFoundException("User doesnt exists in database");
		}
	}

}
